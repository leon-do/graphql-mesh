schema {
  query: Root
}

type Root {
  starwars_allFilms(after: String, first: Int, before: String, last: Int): starwars_FilmsConnection
  starwars_film(id: ID, filmID: ID): starwars_Film
  starwars_allPeople(after: String, first: Int, before: String, last: Int): starwars_PeopleConnection
  starwars_person(id: ID, personID: ID): starwars_Person
  starwars_allPlanets(after: String, first: Int, before: String, last: Int): starwars_PlanetsConnection
  starwars_planet(id: ID, planetID: ID): starwars_Planet
  starwars_allSpecies(after: String, first: Int, before: String, last: Int): starwars_SpeciesConnection
  starwars_species(id: ID, speciesID: ID): starwars_Species
  starwars_allStarships(after: String, first: Int, before: String, last: Int): starwars_StarshipsConnection
  starwars_starship(id: ID, starshipID: ID): starwars_Starship
  starwars_allVehicles(after: String, first: Int, before: String, last: Int): starwars_VehiclesConnection
  starwars_vehicle(id: ID, vehicleID: ID): starwars_Vehicle
  """Fetches an object given its ID"""
  starwars_node(
    """The ID of an object"""
    id: ID!
  ): starwars_Node
}

"""A connection to a list of items."""
type starwars_FilmsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_FilmsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  films: [starwars_Film]
}

"""Information about pagination in a connection."""
type starwars_PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: String
  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""An edge in a connection."""
type starwars_FilmsEdge {
  """The item at the end of the edge"""
  node: starwars_Film
  """A cursor for use in pagination"""
  cursor: String!
}

"""A single film."""
type starwars_Film implements starwars_Node {
  """The title of this film."""
  title: String
  """The episode number of this film."""
  episodeID: Int
  """The opening paragraphs at the beginning of this film."""
  openingCrawl: String
  """The name of the director of this film."""
  director: String
  """The name(s) of the producer(s) of this film."""
  producers: [String]
  """The ISO 8601 date format of film release at original creator country."""
  releaseDate: String
  speciesConnection(after: String, first: Int, before: String, last: Int): starwars_FilmSpeciesConnection
  starshipConnection(after: String, first: Int, before: String, last: Int): starwars_FilmStarshipsConnection
  vehicleConnection(after: String, first: Int, before: String, last: Int): starwars_FilmVehiclesConnection
  characterConnection(after: String, first: Int, before: String, last: Int): starwars_FilmCharactersConnection
  planetConnection(after: String, first: Int, before: String, last: Int): starwars_FilmPlanetsConnection
  """The ISO 8601 date format of the time that this resource was created."""
  created: String
  """The ISO 8601 date format of the time that this resource was edited."""
  edited: String
  """The ID of an object"""
  id: ID!
}

"""An object with an ID"""
interface starwars_Node {
  """The id of the object."""
  id: ID!
}

"""A connection to a list of items."""
type starwars_FilmSpeciesConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_FilmSpeciesEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  species: [starwars_Species]
}

"""An edge in a connection."""
type starwars_FilmSpeciesEdge {
  """The item at the end of the edge"""
  node: starwars_Species
  """A cursor for use in pagination"""
  cursor: String!
}

"""A type of person or character within the Star Wars Universe."""
type starwars_Species implements starwars_Node {
  """The name of this species."""
  name: String
  """The classification of this species, such as "mammal" or "reptile"."""
  classification: String
  """The designation of this species, such as "sentient"."""
  designation: String
  """The average height of this species in centimeters."""
  averageHeight: Float
  """The average lifespan of this species in years, null if unknown."""
  averageLifespan: Int
  """
  Common eye colors for this species, null if this species does not typically
  have eyes.
  """
  eyeColors: [String]
  """
  Common hair colors for this species, null if this species does not typically
  have hair.
  """
  hairColors: [String]
  """
  Common skin colors for this species, null if this species does not typically
  have skin.
  """
  skinColors: [String]
  """The language commonly spoken by this species."""
  language: String
  """A planet that this species originates from."""
  homeworld: starwars_Planet
  personConnection(after: String, first: Int, before: String, last: Int): starwars_SpeciesPeopleConnection
  filmConnection(after: String, first: Int, before: String, last: Int): starwars_SpeciesFilmsConnection
  """The ISO 8601 date format of the time that this resource was created."""
  created: String
  """The ISO 8601 date format of the time that this resource was edited."""
  edited: String
  """The ID of an object"""
  id: ID!
}

"""
A large mass, planet or planetoid in the Star Wars Universe, at the time of
0 ABY.
"""
type starwars_Planet implements starwars_Node {
  """The name of this planet."""
  name: String
  """The diameter of this planet in kilometers."""
  diameter: Int
  """
  The number of standard hours it takes for this planet to complete a single
  rotation on its axis.
  """
  rotationPeriod: Int
  """
  The number of standard days it takes for this planet to complete a single orbit
  of its local star.
  """
  orbitalPeriod: Int
  """
  A number denoting the gravity of this planet, where "1" is normal or 1 standard
  G. "2" is twice or 2 standard Gs. "0.5" is half or 0.5 standard Gs.
  """
  gravity: String
  """The average population of sentient beings inhabiting this planet."""
  population: Float
  """The climates of this planet."""
  climates: [String]
  """The terrains of this planet."""
  terrains: [String]
  """
  The percentage of the planet surface that is naturally occurring water or bodies
  of water.
  """
  surfaceWater: Float
  residentConnection(after: String, first: Int, before: String, last: Int): starwars_PlanetResidentsConnection
  filmConnection(after: String, first: Int, before: String, last: Int): starwars_PlanetFilmsConnection
  """The ISO 8601 date format of the time that this resource was created."""
  created: String
  """The ISO 8601 date format of the time that this resource was edited."""
  edited: String
  """The ID of an object"""
  id: ID!
}

"""A connection to a list of items."""
type starwars_PlanetResidentsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_PlanetResidentsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  residents: [starwars_Person]
}

"""An edge in a connection."""
type starwars_PlanetResidentsEdge {
  """The item at the end of the edge"""
  node: starwars_Person
  """A cursor for use in pagination"""
  cursor: String!
}

"""An individual person or character within the Star Wars universe."""
type starwars_Person implements starwars_Node {
  """The name of this person."""
  name: String
  """
  The birth year of the person, using the in-universe standard of BBY or ABY -
  Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is
  a battle that occurs at the end of Star Wars episode IV: A New Hope.
  """
  birthYear: String
  """
  The eye color of this person. Will be "unknown" if not known or "n/a" if the
  person does not have an eye.
  """
  eyeColor: String
  """
  The gender of this person. Either "Male", "Female" or "unknown",
  "n/a" if the person does not have a gender.
  """
  gender: String
  """
  The hair color of this person. Will be "unknown" if not known or "n/a" if the
  person does not have hair.
  """
  hairColor: String
  """The height of the person in centimeters."""
  height: Int
  """The mass of the person in kilograms."""
  mass: Float
  """The skin color of this person."""
  skinColor: String
  """A planet that this person was born on or inhabits."""
  homeworld: starwars_Planet
  filmConnection(after: String, first: Int, before: String, last: Int): starwars_PersonFilmsConnection
  """The species that this person belongs to, or null if unknown."""
  species: starwars_Species
  starshipConnection(after: String, first: Int, before: String, last: Int): starwars_PersonStarshipsConnection
  vehicleConnection(after: String, first: Int, before: String, last: Int): starwars_PersonVehiclesConnection
  """The ISO 8601 date format of the time that this resource was created."""
  created: String
  """The ISO 8601 date format of the time that this resource was edited."""
  edited: String
  """The ID of an object"""
  id: ID!
}

"""A connection to a list of items."""
type starwars_PersonFilmsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_PersonFilmsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  films: [starwars_Film]
}

"""An edge in a connection."""
type starwars_PersonFilmsEdge {
  """The item at the end of the edge"""
  node: starwars_Film
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_PersonStarshipsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_PersonStarshipsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  starships: [starwars_Starship]
}

"""An edge in a connection."""
type starwars_PersonStarshipsEdge {
  """The item at the end of the edge"""
  node: starwars_Starship
  """A cursor for use in pagination"""
  cursor: String!
}

"""A single transport craft that has hyperdrive capability."""
type starwars_Starship implements starwars_Node {
  """The name of this starship. The common name, such as "Death Star"."""
  name: String
  """
  The model or official name of this starship. Such as "T-65 X-wing" or "DS-1
  Orbital Battle Station".
  """
  model: String
  """
  The class of this starship, such as "Starfighter" or "Deep Space Mobile
  Battlestation"
  """
  starshipClass: String
  """The manufacturers of this starship."""
  manufacturers: [String]
  """The cost of this starship new, in galactic credits."""
  costInCredits: Float
  """The length of this starship in meters."""
  length: Float
  """The number of personnel needed to run or pilot this starship."""
  crew: String
  """The number of non-essential people this starship can transport."""
  passengers: String
  """
  The maximum speed of this starship in atmosphere. null if this starship is
  incapable of atmosphering flight.
  """
  maxAtmospheringSpeed: Int
  """The class of this starships hyperdrive."""
  hyperdriveRating: Float
  """
  The Maximum number of Megalights this starship can travel in a standard hour.
  A "Megalight" is a standard unit of distance and has never been defined before
  within the Star Wars universe. This figure is only really useful for measuring
  the difference in speed of starships. We can assume it is similar to AU, the
  distance between our Sun (Sol) and Earth.
  """
  MGLT: Int
  """The maximum number of kilograms that this starship can transport."""
  cargoCapacity: Float
  """
  The maximum length of time that this starship can provide consumables for its
  entire crew without having to resupply.
  """
  consumables: String
  pilotConnection(after: String, first: Int, before: String, last: Int): starwars_StarshipPilotsConnection
  filmConnection(after: String, first: Int, before: String, last: Int): starwars_StarshipFilmsConnection
  """The ISO 8601 date format of the time that this resource was created."""
  created: String
  """The ISO 8601 date format of the time that this resource was edited."""
  edited: String
  """The ID of an object"""
  id: ID!
}

"""A connection to a list of items."""
type starwars_StarshipPilotsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_StarshipPilotsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  pilots: [starwars_Person]
}

"""An edge in a connection."""
type starwars_StarshipPilotsEdge {
  """The item at the end of the edge"""
  node: starwars_Person
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_StarshipFilmsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_StarshipFilmsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  films: [starwars_Film]
}

"""An edge in a connection."""
type starwars_StarshipFilmsEdge {
  """The item at the end of the edge"""
  node: starwars_Film
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_PersonVehiclesConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_PersonVehiclesEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  vehicles: [starwars_Vehicle]
}

"""An edge in a connection."""
type starwars_PersonVehiclesEdge {
  """The item at the end of the edge"""
  node: starwars_Vehicle
  """A cursor for use in pagination"""
  cursor: String!
}

"""A single transport craft that does not have hyperdrive capability"""
type starwars_Vehicle implements starwars_Node {
  """
  The name of this vehicle. The common name, such as "Sand Crawler" or "Speeder
  bike".
  """
  name: String
  """
  The model or official name of this vehicle. Such as "All-Terrain Attack
  Transport".
  """
  model: String
  """The class of this vehicle, such as "Wheeled" or "Repulsorcraft"."""
  vehicleClass: String
  """The manufacturers of this vehicle."""
  manufacturers: [String]
  """The cost of this vehicle new, in Galactic Credits."""
  costInCredits: Float
  """The length of this vehicle in meters."""
  length: Float
  """The number of personnel needed to run or pilot this vehicle."""
  crew: String
  """The number of non-essential people this vehicle can transport."""
  passengers: String
  """The maximum speed of this vehicle in atmosphere."""
  maxAtmospheringSpeed: Int
  """The maximum number of kilograms that this vehicle can transport."""
  cargoCapacity: Float
  """
  The maximum length of time that this vehicle can provide consumables for its
  entire crew without having to resupply.
  """
  consumables: String
  pilotConnection(after: String, first: Int, before: String, last: Int): starwars_VehiclePilotsConnection
  filmConnection(after: String, first: Int, before: String, last: Int): starwars_VehicleFilmsConnection
  """The ISO 8601 date format of the time that this resource was created."""
  created: String
  """The ISO 8601 date format of the time that this resource was edited."""
  edited: String
  """The ID of an object"""
  id: ID!
}

"""A connection to a list of items."""
type starwars_VehiclePilotsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_VehiclePilotsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  pilots: [starwars_Person]
}

"""An edge in a connection."""
type starwars_VehiclePilotsEdge {
  """The item at the end of the edge"""
  node: starwars_Person
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_VehicleFilmsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_VehicleFilmsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  films: [starwars_Film]
}

"""An edge in a connection."""
type starwars_VehicleFilmsEdge {
  """The item at the end of the edge"""
  node: starwars_Film
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_PlanetFilmsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_PlanetFilmsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  films: [starwars_Film]
}

"""An edge in a connection."""
type starwars_PlanetFilmsEdge {
  """The item at the end of the edge"""
  node: starwars_Film
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_SpeciesPeopleConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_SpeciesPeopleEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  people: [starwars_Person]
}

"""An edge in a connection."""
type starwars_SpeciesPeopleEdge {
  """The item at the end of the edge"""
  node: starwars_Person
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_SpeciesFilmsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_SpeciesFilmsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  films: [starwars_Film]
}

"""An edge in a connection."""
type starwars_SpeciesFilmsEdge {
  """The item at the end of the edge"""
  node: starwars_Film
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_FilmStarshipsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_FilmStarshipsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  starships: [starwars_Starship]
}

"""An edge in a connection."""
type starwars_FilmStarshipsEdge {
  """The item at the end of the edge"""
  node: starwars_Starship
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_FilmVehiclesConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_FilmVehiclesEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  vehicles: [starwars_Vehicle]
}

"""An edge in a connection."""
type starwars_FilmVehiclesEdge {
  """The item at the end of the edge"""
  node: starwars_Vehicle
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_FilmCharactersConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_FilmCharactersEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  characters: [starwars_Person]
}

"""An edge in a connection."""
type starwars_FilmCharactersEdge {
  """The item at the end of the edge"""
  node: starwars_Person
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_FilmPlanetsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_FilmPlanetsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  planets: [starwars_Planet]
}

"""An edge in a connection."""
type starwars_FilmPlanetsEdge {
  """The item at the end of the edge"""
  node: starwars_Planet
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_PeopleConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_PeopleEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  people: [starwars_Person]
}

"""An edge in a connection."""
type starwars_PeopleEdge {
  """The item at the end of the edge"""
  node: starwars_Person
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_PlanetsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_PlanetsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  planets: [starwars_Planet]
}

"""An edge in a connection."""
type starwars_PlanetsEdge {
  """The item at the end of the edge"""
  node: starwars_Planet
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_SpeciesConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_SpeciesEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  species: [starwars_Species]
}

"""An edge in a connection."""
type starwars_SpeciesEdge {
  """The item at the end of the edge"""
  node: starwars_Species
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_StarshipsConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_StarshipsEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  starships: [starwars_Starship]
}

"""An edge in a connection."""
type starwars_StarshipsEdge {
  """The item at the end of the edge"""
  node: starwars_Starship
  """A cursor for use in pagination"""
  cursor: String!
}

"""A connection to a list of items."""
type starwars_VehiclesConnection {
  """Information to aid in pagination."""
  pageInfo: starwars_PageInfo!
  """A list of edges."""
  edges: [starwars_VehiclesEdge]
  """
  A count of the total number of objects in this connection, ignoring pagination.
  This allows a client to fetch the first five objects by passing "5" as the
  argument to "first", then fetch the total count so it could display "5 of 83",
  for example.
  """
  totalCount: Int
  """
  A list of all of the objects returned in the connection. This is a convenience
  field provided for quickly exploring the API; rather than querying for
  "{ edges { node } }" when no edge data is needed, this field can be be used
  instead. Note that when clients like Relay need to fetch the "cursor" field on
  the edge to enable efficient pagination, this shortcut cannot be used, and the
  full "{ edges { node } }" version should be used instead.
  """
  vehicles: [starwars_Vehicle]
}

"""An edge in a connection."""
type starwars_VehiclesEdge {
  """The item at the end of the edge"""
  node: starwars_Vehicle
  """A cursor for use in pagination"""
  cursor: String!
}